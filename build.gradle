plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
}

group 'org.hsmith'
version "git describe --tags".execute().text.trim()
description "Library to integrate with Jira using Jira REST APIs"

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.35.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation group: 'org.openapitools', name: 'kotlin-client', version: '1.0.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.4.0'
    // https://mvnrepository.com/artifact/com.squareup.moshi/moshi
    implementation group: 'com.squareup.moshi', name: 'moshi', version: '1.9.2'
    // https://mvnrepository.com/artifact/com.squareup.moshi/moshi-adapters
    implementation group: 'com.squareup.moshi', name: 'moshi-adapters', version: '1.9.2'
    // https://mvnrepository.com/artifact/com.squareup.moshi/moshi-kotlin
    implementation group: 'com.squareup.moshi', name: 'moshi-kotlin', version: '1.9.2'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.6.0'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.6.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml", "--disabled_rules=no-wildcard-imports", "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "--disabled_rules=no-wildcard-imports", "-F", "src/**/*.kt"
}
